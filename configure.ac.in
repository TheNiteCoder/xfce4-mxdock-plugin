
m4_define([project_version_major], [0])
m4_define([project_version_minor], [9])
m4_define([project_version_micro], [1])
m4_define([project_version_build], [@REVISION@])
m4_define([project_version_tag], [git])
m4_define([project_version], [project_version_major().project_version_minor().project_version_micro()ifelse(project_version_tag(), [git], [project_version_tag()-project_version_build()], [project_version_tag()])])

AC_INIT([xfce4-mxdock-plugin], [0.0.1])
AC_CANONICAL_TARGET()
AC_REVISION([project_version_build])
AC_CONFIG_MACRO_DIRS([m4])
AC_PREFIX_DEFAULT([/usr])

AM_INIT_AUTOMAKE([1.15.0 -Wall -Werror])
AM_MAINTAINER_MODE()
AM_CONFIG_HEADER(config.h)

AC_PROG_CXX()
AC_PROG_LD()
AM_PROG_AR()
AC_PROG_INSTALL()
AC_PROG_LN_S()
IT_PROG_INTLTOOL([0.35.0])

dnl Vertical status bar option
dnl AC_ARG_ENABLE([vertical_bar],
dnl 			  AS_HELP_STRING([--enable-vertical-bar], [Enable vertical bar]))
dnl 
dnl AS_IF([test "x$enable_vertical_bar" = "xyes"], [
dnl 	dnl Doing stuff to enable feature
dnl 	AC_DEFINE([VERTICAL_BAR_ENABLED], [1], [Vertical Bar Status is Enabled])
dnl ])

dnl Initialize libtool, prevent static libraries to remove pointless
dnl compilation
LT_PREREQ([2.2.6])
LT_INIT([disable-static])

dnl Check for standard header files
AC_HEADER_STDC()

AC_CHECK_FUNCS([bind_textdomain_codeset])

dnl Configure the panel plugin (XFCE4 xdt-depends.m4)
XDT_CHECK_LIBX11_REQUIRE()
XDT_CHECK_PACKAGE([GIO], [gio-2.0], [2.42.0])
XDT_CHECK_PACKAGE([GLIB], [glib-2.0], [2.42.0])
XDT_CHECK_PACKAGE([GTK], [gtk+-3.0], [3.24.0])
XDT_CHECK_PACKAGE([CAIRO], [cairo], [1.16.0])
XDT_CHECK_PACKAGE([WNCK], [libwnck-3.0], [3.30.0])
XDT_CHECK_PACKAGE([X11], [x11], [1.6])
XDT_CHECK_PACKAGE([LIBXFCE4UI], [libxfce4ui-2], [4.14.0])
XDT_CHECK_PACKAGE([LIBXFCE4UTIL], [libxfce4util-1.0], [4.14.0])
XDT_CHECK_PACKAGE([LIBXFCE4PANEL], [libxfce4panel-2.0], [4.14.0])

dnl Check for i18n support
XDT_I18N([@LINGUAS@])

dnl Checks for libraries
PKG_CHECK_MODULES([WNCK], [libwnck-3.0 >= 3.30.0])
PKG_CHECK_MODULES([CAIRO], [cairo >= 1.16.0])
PKG_CHECK_MODULES([GTK], [gtk+-3.0 >= 3.24.0])
PKG_CHECK_MODULES([X11], [x11 >= 1.6])

AC_SUBST([WNCK_CFLAGS])
AC_SUBST([CAIRO_LIBS])
AC_SUBST([WNCK_LIBS])

AC_SUBST([GTK_CFLAGS])
AC_SUBST([CAIRO_LIBS])
AC_SUBST([GTK_LIBS])

dnl Substitute platform flags
AC_MSG_CHECKING([PLATFORM_CPPFLAGS])
AC_MSG_RESULT([$PLATFORM_CPPFLAGS])
AC_SUBST([PLATFORM_CPPFLAGS])
AC_MSG_CHECKING([PLATFORM_CFLAGS])
AC_MSG_RESULT([$PLATFORM_CFLAGS])
AC_SUBST([PLATFORM_CFLAGS])
AC_MSG_CHECKING([PLATFORM_LDFLAGS])
AC_MSG_RESULT([$PLATFORM_LDFLAGS])
AC_SUBST([PLATFORM_LDFLAGS])

_cppflags="${CPPFLAGS}"
_ldflags="${LDFLAGS}"
 
CPPFLAGS=${_cppflags}
LDFLAGS=${_ldflags}

dnl Create makefiles
dnl AC_CONFIG_FILES([
dnl 	Makefile 
dnl     src/Makefile
dnl 	po/Makefile.in
dnl ])
AC_OUTPUT([
	Makefile
	src/Makefile
	po/Makefile.in
])
